<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="User">

	<resultMap id="user" type="User">
		<id property="id" column="id" />
		<result property="real_name" column="real_name" javaType="string" />
		<result property="phone_number" column="phone_number" javaType="string" />
		<result property="password" column="password" javaType="string" />
		<result property="email" column="email" javaType="string" />
		<collection property="role" ofType="Role">
			<id property="id" column="role_id" />
			<result property="role" column="role_name" />
		</collection>
	</resultMap>

	<insert id="create" parameterType="User">
		<selectKey order="BEFORE" keyProperty="id" resultType="long">
			SELECT nextval('public.users_id_seq')
		</selectKey>
		INSERT INTO public.users (id, real_name,phone_number,email,password)
		VALUES (#{id},#{real_name},#{phone_number},#{email}, md5(#{password}))
	</insert>

	<select id="read" parameterType="long" resultMap="user">
		SELECT u.id,u.real_name,u.phone_number, u.email,u.password, r.id AS	role_id, r.role AS role_name
		FROM
		public.users u LEFT JOIN public.users_roles ur ON (u.id = ur.user_id)
		LEFT JOIN public.roles r ON (r.id = ur.role_id)
		WHERE u.id = #{id}
	</select>

	<update id="update" parameterType="User">
		UPDATE public.users SET
		real_name = #{real_name},
		phone_number = #{phone_number},
		email =	#{email},
		password = #{password}
		WHERE id = #{id}
	</update>

	<update id="updateNoPass" parameterType="User">
		UPDATE public.users SET
		real_name = #{real_name},
		phone_number = #{phone_number},
		email =	#{email}
		WHERE id = #{id}
	</update>

	<delete id="delete" parameterType="long">
		DELETE FROM public.users
		WHERE
		id = #{id}
	</delete>

	<select id="findByName" parameterType="string" resultMap="user">
		SELECT u.id,u.real_name,u.phone_number, u.email,u.password, r.id AS	role_id, r.role AS role_name
		FROM
		public.users u LEFT JOIN public.users_roles ur ON (u.id = ur.user_id)
		LEFT JOIN public.roles r ON (r.id = ur.role_id)
		WHERE u.real_name = #{name}
	</select>

	<select id="findByEmail" parameterType="string" resultMap="user">
		SELECT u.id,u.real_name,u.phone_number, u.email,u.password, r.id AS	role_id, r.role AS role_name
		FROM
		public.users u LEFT JOIN public.users_roles ur ON (u.id = ur.user_id)
		LEFT JOIN public.roles r ON (r.id = ur.role_id)
		WHERE u.email = #{name}
	</select>

	
	<select id="findAll" parameterType="string" resultMap="user">
		SELECT u.id,u.real_name,u.phone_number, u.email,u.password, r.id AS	role_id, r.role AS role_name
		FROM
		public.users u LEFT JOIN public.users_roles ur ON (u.id = ur.user_id)
		LEFT JOIN public.roles r ON (r.id = ur.role_id)
	</select>
	
	
	<select id="findByName_like" parameterType="string" resultMap="user">
		SELECT u.id,u.real_name,u.phone_number, u.email,u.password, r.id AS	role_id, r.role AS role_name
		FROM
		public.users u LEFT JOIN public.users_roles ur ON (u.id = ur.user_id)
		LEFT JOIN public.roles r ON (r.id = ur.role_id)
		where (u.real_name LIKE('%'||#{name}||'%'))
	</select>
</mapper>
